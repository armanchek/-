Сначала считываю размеры поля (n и m), а потом заполняю двумерный список coins, где хранится количество монет в каждой клетке. Это  наше поле, по которому Черепаха будет ползти.
Создаю два массива: dp и path. В dp будем хранить максимальное количество монет, которое можно собрать, добравшись до каждой клетки. В path будем хранить путь — последовательность команд (‘R’ для вправо и ‘D’ для вниз), которая привела нас в каждую клетку.
Инициализирую первую клетку , куда Черепаха попадает сразу. Количество монет там — это просто значение из coins[0][0].
Для первой строки (где можно двигаться только вправо) и первого столбца (где можно двигаться только вниз) заполняю значения в dp и записываю путь в path. Это просто: если идём вправо — добавляю монеты из предыдущей клетки плюс текущие, и в путь добавляю ‘R’. То же самое для движения вниз — добавляю ‘D’.
Теперь перебираю все остальные клетки. В каждой клетке Черепаха может прийти либо сверху, либо слева. Сравниваю, откуда прийти выгоднее — то есть, где в dp больше монет накопилось. Если сверху больше, записываю путь ‘D’ и обновляю количество монет. Если слева больше — добавляю ‘R’ и обновляю количество монет.
В конце вывожу, сколько монет Черепаха может максимум собрать, и путь, по которому ей надо идти, чтобы собрать это количество.
