from collections import deque

def shortest_path(n, m, edges):
    graph = [[] for _ in range(n + 1)]
    
    for u, v in edges:
        graph[u].append(v)
        graph[v].append(u)

    distances = [-1] * (n + 1)
    distances[1] = 0
    
    queue = deque([1])
    
    while queue:
        current = queue.popleft()
        
        for neighbor in graph[current]:
            if distances[neighbor] == -1:
                distances[neighbor] = distances[current] + 1
                queue.append(neighbor)
    
    print(" ".join(map(str, distances[1:])))

n, m = map(int, input().split())
edges = [tuple(map(int, input().split())) for _ in range(m)]

shortest_path(n, m, edges)
